/*
 * ValueDefinitions.h
 *
 *  Created on: 4 Eki 2020
 *      Author: hakan
 */

#ifndef CONSTANTPARAMETERS_H_
#define CONSTANTPARAMETERS_H_



#define ENCODERRESOLUTION     3600
#define NUMBEROFTICKSPERQAB   4
#define ENCODERMAXTICKCOUNT   (ENCODERRESOLUTION*NUMBEROFTICKSPERQAB-1)
#define QPOSMAXVALUE          ((ENCODERRESOLUTION*NUMBEROFTICKSPERQAB)*2-1)

#define MPC_ENABLE  1
#define MPC_DISABLE 0

#define CS_DC_OFFSET 2.68 // this is the current measuring offset caused by the CS of the inverter

#define PI ((float )3.1415926)
#define TWO_PI_OVER_THREE 2.09439510

#define BUILDMODE MODE_RL_LOAD

#define BASE_CURRENT 20.625 // Base current (with DRV830x gain set to 40)


#define DEADBAND_FED 0          /*ns*/
#define DEADBAND_RED 0          /*ns*/
#define SYSCLKFREQUENCY 200000000 /*Hz*/
#define SYSCLKPERIOD 5            /*ns*/

#define ACQPS_PERIOD 30
#define EPWM1_SOCA_TRG 0x5  // for module 1
#define EPWM4_SOCA_TRG 0xB  // for module 2

#define M1_ADCRESULT_VA AdcaResultRegs.ADCRESULT0
#define M1_ADCRESULT_VB AdccResultRegs.ADCRESULT0
#define M1_ADCRESULT_VC AdcbResultRegs.ADCRESULT0
#define M1_ADCRESULT_VDC AdcaResultRegs.ADCRESULT1
#define M1_ADCRESULT_IA AdccResultRegs.ADCRESULT1
#define M1_ADCRESULT_IB AdcbResultRegs.ADCRESULT1
#define M1_ADCRESULT_IC AdcaResultRegs.ADCRESULT2

#define M1_ADCRESULT_VDC_CLA ((uint16_t)(HWREGH(ADCARESULT_BASE+ADC_O_RESULT1))) //AdcaResultRegs.ADCRESULT1


#define M2_ADCRESULT_VA AdcaResultRegs.ADCRESULT3
#define M2_ADCRESULT_VB AdccResultRegs.ADCRESULT2
#define M2_ADCRESULT_VC AdcbResultRegs.ADCRESULT2
#define M2_ADCRESULT_VDC AdcaResultRegs.ADCRESULT4
#define M2_ADCRESULT_IA AdccResultRegs.ADCRESULT3
#define M2_ADCRESULT_IB AdcbResultRegs.ADCRESULT3
#define M2_ADCRESULT_IC AdcaResultRegs.ADCRESULT5

#define M2_ADCRESULT_VDC_CLA ((uint16_t)(HWREGH(ADCARESULT_BASE+ADC_O_RESULT4))) //AdcaResultRegs.ADCRESULT4



#define M1_IA_FAULTFLAG Cmpss6Regs.COMPSTS.bit.COMPHSTS
#define M1_IB_FAULTFLAG Cmpss3Regs.COMPSTS.bit.COMPHSTS
#define M1_IC_FAULTFLAG Cmpss1Regs.COMPSTS.bit.COMPHSTS

#define M1_IA_FAULTFLAG_LATCH Cmpss6Regs.COMPSTS.bit.COMPHLATCH
#define M1_IB_FAULTFLAG_LATCH Cmpss3Regs.COMPSTS.bit.COMPHLATCH
#define M1_IC_FAULTFLAG_LATCH Cmpss1Regs.COMPSTS.bit.COMPHLATCH


#define M1_PPBADCRESULT_IA ((signed int)AdccResultRegs.ADCPPB1RESULT.all)
#define M1_PPBADCRESULT_IB ((signed int)AdcbResultRegs.ADCPPB1RESULT.all)
#define M1_PPBADCRESULT_IC ((signed int)AdcaResultRegs.ADCPPB1RESULT.all)

#define M1_PPBADCRESULT_IA_CLA ((signed int)HWREG(ADCCRESULT_BASE+ADC_O_PPB1RESULT))   //((signed int)AdccResultRegs.ADCPPB1RESULT.all)
#define M1_PPBADCRESULT_IB_CLA ((signed int)HWREG(ADCBRESULT_BASE+ADC_O_PPB1RESULT))   //((signed int)AdcbResultRegs.ADCPPB1RESULT.all)
#define M1_PPBADCRESULT_IC_CLA ((signed int)HWREG(ADCARESULT_BASE+ADC_O_PPB1RESULT))   //((signed int)AdcaResultRegs.ADCPPB1RESULT.all)

#define M2_PPBADCRESULT_IA ((signed int)AdccResultRegs.ADCPPB2RESULT.all)
#define M2_PPBADCRESULT_IB ((signed int)AdcbResultRegs.ADCPPB2RESULT.all)
#define M2_PPBADCRESULT_IC ((signed int)AdcaResultRegs.ADCPPB2RESULT.all)

#define M2_PPBADCRESULT_IA_CLA ((signed int)HWREG(ADCCRESULT_BASE+ADC_O_PPB2RESULT))
#define M2_PPBADCRESULT_IB_CLA ((signed int)HWREG(ADCBRESULT_BASE+ADC_O_PPB2RESULT))
#define M2_PPBADCRESULT_IC_CLA ((signed int)HWREG(ADCARESULT_BASE+ADC_O_PPB2RESULT))

#define ADC_PU_SCALE_FACTOR 0.000244140625     //1/2^12
#define ADC_PU_PPB_SCALE_FACTOR 0.000488281250 //1/2^11

#define VREF 3.0
#define VREF_SCALE 2.0 //k value for drv8305
#define ADC_MAX_12BIT 4095
#define CURRENT_SENSE_RESISTOR 0.007 //ohm

#define M1_VA_PIN_VOLTAGE_FLOAT (VREF * ((float)M1_ADCRESULT_VA) / ((float)ADC_MAX_12BIT))
#define M1_VB_PIN_VOLTAGE_FLOAT (VREF * ((float)M1_ADCRESULT_VB) / ((float)ADC_MAX_12BIT))
#define M1_VC_PIN_VOLTAGE_FLOAT (VREF * ((float)M1_ADCRESULT_VC) / ((float)ADC_MAX_12BIT))
#define M1_VDC_PIN_VOLTAGE_FLOAT (VREF * ((float)M1_ADCRESULT_VDC) / ((float)ADC_MAX_12BIT))
#define M1_IA_PIN_VOLTAGE_FLOAT (VREF * ((float)M1_ADCRESULT_IA) / ((float)ADC_MAX_12BIT))
#define M1_IB_PIN_VOLTAGE_FLOAT (VREF * ((float)M1_ADCRESULT_IB) / ((float)ADC_MAX_12BIT))
#define M1_IC_PIN_VOLTAGE_FLOAT (VREF * ((float)M1_ADCRESULT_IC) / ((float)ADC_MAX_12BIT))

#define M1_VDC_PIN_VOLTAGE_FLOAT_CLA (VREF * ((float)M1_ADCRESULT_VDC_CLA) / ((float)ADC_MAX_12BIT))


#define M2_VA_PIN_VOLTAGE_FLOAT (VREF * ((float)M2_ADCRESULT_VA) / ((float)ADC_MAX_12BIT))
#define M2_VB_PIN_VOLTAGE_FLOAT (VREF * ((float)M2_ADCRESULT_VB) / ((float)ADC_MAX_12BIT))
#define M2_VC_PIN_VOLTAGE_FLOAT (VREF * ((float)M2_ADCRESULT_VC) / ((float)ADC_MAX_12BIT))
#define M2_VDC_PIN_VOLTAGE_FLOAT (VREF * ((float)M2_ADCRESULT_VDC) / ((float)ADC_MAX_12BIT))
#define M2_IA_PIN_VOLTAGE_FLOAT (VREF * ((float)M2_ADCRESULT_IA) / ((float)ADC_MAX_12BIT))
#define M2_IB_PIN_VOLTAGE_FLOAT (VREF * ((float)M2_ADCRESULT_IB) / ((float)ADC_MAX_12BIT))
#define M2_IC_PIN_VOLTAGE_FLOAT (VREF * ((float)M2_ADCRESULT_IC) / ((float)ADC_MAX_12BIT))

#define M2_VDC_PIN_VOLTAGE_FLOAT_CLA (VREF * ((float)M2_ADCRESULT_VDC_CLA) / ((float)ADC_MAX_12BIT))



#define M1_VA_VOLTAGE_FLOAT M1_VA_PIN_VOLTAGE_FLOAT * 66.99 / 4.99
#define M1_VB_VOLTAGE_FLOAT M1_VB_PIN_VOLTAGE_FLOAT * 66.99 / 4.99
#define M1_VC_VOLTAGE_FLOAT M1_VC_PIN_VOLTAGE_FLOAT * 66.99 / 4.99
#define M1_VDC_VOLTAGE_FLOAT M1_VDC_PIN_VOLTAGE_FLOAT * 66.99 / 4.99
//#define M1_IA_CURRENT_FLOAT (M1_IA_PIN_VOLTAGE_FLOAT - VREF / VREF_SCALE) / ((float)DRV_GAIN) / CURRENT_SENSE_RESISTOR - CS_DC_OFFSET
//#define M1_IB_CURRENT_FLOAT (M1_IB_PIN_VOLTAGE_FLOAT - VREF / VREF_SCALE) / ((float)DRV_GAIN) / CURRENT_SENSE_RESISTOR - CS_DC_OFFSET
//#define M1_IC_CURRENT_FLOAT (M1_IC_PIN_VOLTAGE_FLOAT - VREF / VREF_SCALE) / ((float)DRV_GAIN) / CURRENT_SENSE_RESISTOR - CS_DC_OFFSET
#define M1_IA_CURRENT_FLOAT    M1_PPBADCRESULT_IA*ADC_PU_PPB_SCALE_FACTOR*BASE_CURRENT
#define M1_IB_CURRENT_FLOAT    M1_PPBADCRESULT_IB*ADC_PU_PPB_SCALE_FACTOR*BASE_CURRENT
#define M1_IC_CURRENT_FLOAT    M1_PPBADCRESULT_IC*ADC_PU_PPB_SCALE_FACTOR*BASE_CURRENT

#define M1_IA_CURRENT_FLOAT_CLA     M1_PPBADCRESULT_IA_CLA*ADC_PU_PPB_SCALE_FACTOR*BASE_CURRENT  //M1_PPBADCRESULT_IA*ADC_PU_PPB_SCALE_FACTOR*BASE_CURRENT
#define M1_IB_CURRENT_FLOAT_CLA     M1_PPBADCRESULT_IB_CLA*ADC_PU_PPB_SCALE_FACTOR*BASE_CURRENT  //M1_PPBADCRESULT_IB*ADC_PU_PPB_SCALE_FACTOR*BASE_CURRENT
#define M1_IC_CURRENT_FLOAT_CLA     M1_PPBADCRESULT_IC_CLA*ADC_PU_PPB_SCALE_FACTOR*BASE_CURRENT  //M1_PPBADCRESULT_IC*ADC_PU_PPB_SCALE_FACTOR*BASE_CURRENT
#define M1_VDC_VOLTAGE_FLOAT_CLA    M1_VDC_PIN_VOLTAGE_FLOAT_CLA * 66.99 / 4.99

#define M2_VA_VOLTAGE_FLOAT M2_VA_PIN_VOLTAGE_FLOAT * 66.99 / 4.99
#define M2_VB_VOLTAGE_FLOAT M2_VB_PIN_VOLTAGE_FLOAT * 66.99 / 4.99
#define M2_VC_VOLTAGE_FLOAT M2_VC_PIN_VOLTAGE_FLOAT * 66.99 / 4.99
#define M2_VDC_VOLTAGE_FLOAT M2_VDC_PIN_VOLTAGE_FLOAT * 66.99 / 4.99
//#define M2_IA_CURRENT_FLOAT (M2_IA_PIN_VOLTAGE_FLOAT - VREF / VREF_SCALE) / ((float)DRV_GAIN) / CURRENT_SENSE_RESISTOR - CS_DC_OFFSET
//#define M2_IB_CURRENT_FLOAT (M2_IB_PIN_VOLTAGE_FLOAT - VREF / VREF_SCALE) / ((float)DRV_GAIN) / CURRENT_SENSE_RESISTOR - CS_DC_OFFSET
//#define M2_IC_CURRENT_FLOAT (M2_IC_PIN_VOLTAGE_FLOAT - VREF / VREF_SCALE) / ((float)DRV_GAIN) / CURRENT_SENSE_RESISTOR - CS_DC_OFFSET
#define M2_IA_CURRENT_FLOAT    M2_PPBADCRESULT_IA*ADC_PU_PPB_SCALE_FACTOR*BASE_CURRENT
#define M2_IB_CURRENT_FLOAT    M2_PPBADCRESULT_IB*ADC_PU_PPB_SCALE_FACTOR*BASE_CURRENT
#define M2_IC_CURRENT_FLOAT    M2_PPBADCRESULT_IC*ADC_PU_PPB_SCALE_FACTOR*BASE_CURRENT

#define M2_IA_CURRENT_FLOAT_CLA     M2_PPBADCRESULT_IA_CLA*ADC_PU_PPB_SCALE_FACTOR*BASE_CURRENT
#define M2_IB_CURRENT_FLOAT_CLA     M2_PPBADCRESULT_IB_CLA*ADC_PU_PPB_SCALE_FACTOR*BASE_CURRENT
#define M2_IC_CURRENT_FLOAT_CLA     M2_PPBADCRESULT_IC_CLA*ADC_PU_PPB_SCALE_FACTOR*BASE_CURRENT
#define M2_VDC_VOLTAGE_FLOAT_CLA    M2_VDC_PIN_VOLTAGE_FLOAT_CLA * 66.99 / 4.99





/*---------Protection definitions start-----------*/
#define M1_IA_POS_CMPSS_PROTECTION MPC_DISABLE
#define M1_IA_NEG_CMPSS_PROTECTION MPC_DISABLE
#define M1_IB_POS_CMPSS_PROTECTION MPC_DISABLE
#define M1_IB_NEG_CMPSS_PROTECTION MPC_DISABLE
#define M1_IC_POS_CMPSS_PROTECTION MPC_DISABLE
#define M1_IC_NEG_CMPSS_PROTECTION MPC_DISABLE


#define M1_IA_UPPERBOUND_PROTECTION_ADC_VALUE_12BIT  4000
#define M1_IA_LOWERBOUND_PROTECTION_ADC_VALUE_12BIT  50

#define M1_IB_UPPERBOUND_PROTECTION_ADC_VALUE_12BIT  4000
#define M1_IB_LOWERBOUND_PROTECTION_ADC_VALUE_12BIT  50

#define M1_IC_UPPERBOUND_PROTECTION_ADC_VALUE_12BIT  4000
#define M1_IC_LOWERBOUND_PROTECTION_ADC_VALUE_12BIT  50

#define M1_IA_RUNTIME_PROTECTION_VALUE 20 //Amps
#define M1_IB_RUNTIME_PROTECTION_VALUE 20 //Amps
#define M1_IC_RUNTIME_PROTECTION_VALUE 20 //Amps

#define M1_VDC_UPPERBOUND_PROTECTION    45 //volts
#define M1_VDC_LOWERBOUND_PROTECTION    20 //volts

/*---------Protection definitions end-----------*/


#define CPU1_ENABLEDRV8305_PIN          124 // GPIO124
#define CPU2_ENABLEDRV8305_PIN          26  // GPIO26











#endif /* CONSTANTPARAMETERS_H_ */
